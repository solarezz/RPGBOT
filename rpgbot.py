import asyncio
import json
import logging
import random
import threading
import datetime
import os
from background import keep_alive #–∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
import time
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.types import InputFile
from config import TOKEN
from time import time as now

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)




res_dt = datetime.datetime.now()

ADMIN_ID = 2023527964

cooldown = 1800
cdboss = 86400


pointer = lambda username: {
    "username": username,
    "money": 10000,
    "level": 1,
    "power": 5,
    "hp": 10,
    "pet": "–ù–µ—Ç",
    "armor": "–ë—Ä–æ–Ω—è –∏–∑ –∫–æ–∂–∏",
    "dateofreg": res_dt.strftime("%d-%m-%Y %H:%M"),
    "apteka": 0,
    "wolf": 0,
    "enot": 0,
    "drone": 0,
    "randlist": 0,
    "plusmoney": 0,
    "pluslevel": 0,
    "bonus": 0,
    "id": user_id
}

pointerboss = lambda username: {
    "username": username,
    "hples": 5,
    "hpskelet": 10,
    "hpbarya": 20,
    "hpmag": 50,
    "hpjin": 80,
    "hpzombie": 140,
    "hpspider": 200,
    "hpfortuna": 1
}

@dp.message_handler(commands=['start']) # –°—Ç–∞—Ä—Ç –∏ –≤–Ω–µ—Å–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
async def start(message: types.Message):
    with open("C:/IT/RPGbot/database.json", "r") as f_o:
        data_from_json = json.loads(f_o.read())

    global user_id
    user_id = message.from_user.id
    firstname = message.from_user.username

        
    if str(user_id) not in data_from_json:
        data_from_json[user_id] = pointer(firstname)
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
            

    with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
        databoss_from_json = json.loads(f_o.read())

    user_id = message.from_user.id
    firstname = message.from_user.username

    if str(user_id) not in databoss_from_json:
        databoss_from_json[user_id] = pointerboss(firstname)
        with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
            json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        bcmds = KeyboardButton("üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã")
        markup.add(bcmds)
        await bot.send_message(message.from_user.id, "üóÉÔ∏è –í—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã\nüåü –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É!", reply_markup=markup)



@dp.message_handler(lambda msg: msg.text.startswith('–û—Ä—É–∂–∏–µ'))
async def weapon(message):
    pass

@dp.message_handler(lambda msg: msg.text.startswith('–ü–æ—Ö–æ–¥'))
async def hike(message):
    pass

@dp.message_handler(lambda msg: msg.text.startswith('–õ–æ–∫–∞—Ü–∏—è'))
async def location(message):
    pass

@dp.message_handler(lambda msg: msg.text.startswith('ü¶á –ú–µ–≥–∞–±–æ—Å—Å'))
async def megaboss(message):
    with open("C:/IT/RPGbot/megaboss.json", "r") as f_o:
        megaboss = json.loads(f_o.read())
        mghp = megaboss["megabosshp"]
    if megaboss["megabosshp"] >= 0:
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['ü¶á –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ú–µ–≥–∞–±–æ—Å—Å—É', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/megaboss.png'), caption=f"\
    –ë–æ—Å—Å: ü¶á –ú–µ–≥–∞–±–æ—Å—Å\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {mghp} ‚ù§Ô∏è\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –ú–æ–Ω–µ—Ç—ã\n\
    ", reply_markup=markup)
    else:
        await message.answer("‚è≥ –ë–æ—Å—Å –µ—â–µ –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è!")

@dp.message_handler(lambda msg: msg.text.startswith('ü¶á –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ú–µ–≥–∞–±–æ—Å—Å—É'))
async def damagemegaboss(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/megaboss.json", "r") as f_o:
            megaboss = json.loads(f_o.read())
        
        user_id = message.from_user.id
        if now() > megaboss["megabosstimer"] + cdboss:
            if megaboss["megabosshp"] >= 0:
                power = data_from_json[f"{user_id}"]["power"]
                megaboss["megabosshp"] -= power
                hpmb = megaboss["megabosshp"]
                await message.answer(f"ü§ï –í—ã –Ω–∞–Ω–µ—Å–ª–∏ –º–µ–≥–∞–±–æ—Å—Å—É —É—Ä–æ–Ω, –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpmb}")
                if megaboss["megabosshp"] <= 0:
                    if now() > megaboss['megabosstimer'] + cdboss:
                        megaboss["megabosstimer"] = now()
                        randmon = random.randint(120000, 250000)
                        data_from_json[f"{user_id}"]["money"] += randmon
                        await message.answer(f"‚ö∞Ô∏è –ú–µ–≥–∞–±–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω! –í—ã –ø–æ–ª—É—á–∏–ª–∏: {randmon}")
                    else:
                        seconds = megaboss["megabosstimer"]
                        result = (time.ctime(seconds))
                        timer = result[11:][:8]
                        await message.answer(f"‚è≥ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –±–æ—Å—Å –±—ã–ª —É–±–∏—Ç –≤ {timer}! –ï—Å–ª–∏ –≤–∞–º –Ω–µ –≤—ã–¥–∞–ª–∏ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –±–æ—Å—Å–∞, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ª—Å @solarezzov —Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏ –Ω–∞–Ω–µ—Å–µ–Ω–∏—è —É—Ä–æ–Ω–∞ –±–æ—Å—Å—É.")
            else:
                await bot.send_message(message.from_user.id, "‚ö∞Ô∏è –ú–µ–≥–∞–±–æ—Å—Å —É–∂–µ –ø–æ–≤–µ—Ä–∂–µ–Ω, –µ—Å–ª–∏ –≤–∞–º –Ω–µ –≤—ã–¥–∞–ª–∏ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –±–æ—Å—Å–∞, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ª—Å @solarezzov —Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏ –Ω–∞–Ω–µ—Å–µ–Ω–∏—è —É—Ä–æ–Ω–∞ –±–æ—Å—Å—É.")
        else:
            seconds = megaboss["megabosstimer"]
            result = (time.ctime(seconds))
            timer = result[11:][:8]
            await message.answer(f"‚è≥ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –±–æ—Å—Å –±—ã–ª —É–±–∏—Ç –≤ {timer}! –ï—Å–ª–∏ –≤–∞–º –Ω–µ –≤—ã–¥–∞–ª–∏ –Ω–∞–≥—Ä–∞–¥—É –∑–∞ –±–æ—Å—Å–∞, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ª—Å @solarezzov —Å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏ –Ω–∞–Ω–µ—Å–µ–Ω–∏—è —É—Ä–æ–Ω–∞ –±–æ—Å—Å—É.")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
        with open("C:/IT/RPGbot/megaboss.json", "w") as f_o:
            json.dump(megaboss, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å'))
async def admpanel(message):
    user_id = message.from_user.id
    if user_id == ADMIN_ID:
        await message.answer("–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:\n–¥–∞—Ç—å–¥–µ–Ω–µ–≥ - –≤—ã–¥–∞—Ç—å –º–æ–Ω–µ—Ç—ã\n–¥–∞—Ç—å—Ä–µ–π—Ç–∏–Ω–≥ - –¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥")

@dp.message_handler(lambda msg: msg.text.startswith('–¥–∞—Ç—å—Ä–µ–π—Ç–∏–Ω–≥'))
async def givemoney(message):
    user_id = message.from_user.id
    if user_id == ADMIN_ID:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            
            message_options = message.text.split()[1:]
            data_from_json[f"{message_options[0]}"]["level"] += int(message_options[1])
            await bot.send_message(message.from_user.id, "üí∞ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É —Ä–µ–π—Ç–∏–Ω–≥!")
            await bot.send_message(message_options[0], f"üí∞ –ê–¥–º–∏–Ω –≤—ã–¥–∞–ª –≤–∞–º {message_options[1]} —Ä–µ–π—Ç–∏–Ω–≥(–∞)!")
            
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)

@dp.message_handler(lambda msg: msg.text.startswith('–¥–∞—Ç—å–¥–µ–Ω–µ–≥'))
async def givemoney(message):
    user_id = message.from_user.id
    if user_id == ADMIN_ID:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            
            message_options = message.text.split()[1:]
            data_from_json[f"{message_options[0]}"]["money"] += int(message_options[1])
            await bot.send_message(message.from_user.id, "üí∞ –í—ã –≤—ã–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É –º–æ–Ω–µ—Ç—ã!")
            await bot.send_message(message_options[0], f"üí∞ –ê–¥–º–∏–Ω –≤—ã–¥–∞–ª –≤–∞–º {message_options[1]} –º–æ–Ω–µ—Ç!")

        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)

@dp.message_handler(lambda msg: msg.text.startswith('–ü—Ä–æ–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥'))
async def selllevel(message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())

            message_options = message.text.split()[1:]
            if data_from_json[f"{user_id}"]["level"] >= int(message_options[1]):
                data_from_json[f"{user_id}"]["level"] -= int(message_options[1])
                data_from_json[f"{user_id}"]["money"] += int(message_options[1])*100
                await bot.send_message(message.from_user.id, "üí∞ –í—ã –ø—Ä–æ–¥–∞–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥!")
            else:
                await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ —Ä–µ–π—Ç–∏–Ω–≥–∞!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except IndexError:
        await bot.send_message(message.from_user.id, "‚ùå –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–ª-–≤–æ —É—Ä–æ–≤–Ω—è —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å! –ù–∞–ø–∏—à–∏—Ç–µ –ü—Ä–æ–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ [—Å–∫–æ–ª—å–∫–æ] –ë–ï–ó –°–ö–û–ë–û–ö!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('–ß–µ–∫'))
async def check(message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())

            message_options = message.text.split()[1:]
            usname = data_from_json[f"{message_options[0]}"]["username"]
            mon = data_from_json[f"{message_options[0]}"]["money"]
            lvl = data_from_json[f"{message_options[0]}"]["level"]
            arm = data_from_json[f"{message_options[0]}"]["armor"]
            pet = data_from_json[f"{message_options[0]}"]["pet"] # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å, –Ω–æ –±—ã–ª–∞ –æ–±—ä—è–≤–ª–µ–Ω–∞ —á—Ç–æ –∑–∞–Ω—è–ª–æ –ø–∞–º—è—Ç—å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å
            power = data_from_json[f"{message_options[0]}"]["power"]
            health = data_from_json[f"{message_options[0]}"]["hp"]
            dateofregistr = data_from_json[f"{message_options[0]}"]["dateofreg"]
            await message.answer(f"\
–ü—Ä–æ—Ñ–∏–ª—å {usname}:\n\
    ‚ö° –ù–∏–∫–Ω–µ–π–º: {usname}\n\
    üí≥ ID: {user_id}\n\
    üí∞ –ú–æ–Ω–µ—Ç: {mon}\n\
    ‚ú® –†–µ–π—Ç–∏–Ω–≥: {round(lvl, 2)}\n\
    üõ°Ô∏è –ë—Ä–æ–Ω—è: {arm}\n\
    ‚öîÔ∏è –°–∏–ª–∞: {power}\n\
    üíä –ó–¥–æ—Ä–æ–≤—å–µ: {health}\n\
    üêæ –ü–∏—Ç–æ–º–µ—Ü: {pet}\n\
    üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {dateofregistr}\
            ")
    except IndexError:
        await bot.send_message(message.from_user.id, "‚ùå –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! –ù–∞–ø–∏—à–∏—Ç–µ ""–ß–µ–∫ [ID]"" –ë–ï–ó –°–ö–û–ë–û–ö!")

@dp.message_handler(lambda msg: msg.text.startswith('–ü–µ—Ä–µ–¥–∞—Ç—å'))
async def pay(message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())

            message_options = message.text.split()[1:]
            if data_from_json[f"{user_id}"]["money"] >= int(message_options[1]):
                data_from_json[f"{user_id}"]["money"] -= int(message_options[1])
                data_from_json[f"{message_options[0]}"]["money"] += int(message_options[1])
                await bot.send_message(message.from_user.id, "üí∞ –í—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É –º–æ–Ω–µ—Ç—ã!")
                await bot.send_message(message_options[0], f"üí∞ –í–∞–º –ø–µ—Ä–µ–¥–∞–ª–∏ –¥–µ–Ω—å–≥–∏ –≤ —Ä–∞–∑–º–µ—Ä–µ {message_options[1]} –º–æ–Ω–µ—Ç!")
            else:
                await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –º–æ–Ω–µ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError or IndexError:
        await bot.send_message(message.from_user.id, "‚ùå –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! –ù–∞–ø–∏—à–∏—Ç–µ ""–ü–µ—Ä–µ–¥–∞—Ç—å [ID] [—Å—É–º–º–∞]"" –ë–ï–ó –°–ö–û–ë–û–ö!")


@dp.message_handler(lambda msg: msg.text.startswith('üéÅ –ë–æ–Ω—É—Å'))
async def present(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
        user_id = message.from_user.id 
        if now() > data_from_json[f'{user_id}']['bonus'] + cooldown:
            data_from_json[f'{user_id}']['bonus'] = now()
            data_from_json[f"{user_id}"]["money"] += 500
            await bot.send_message(message.from_user.id, "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å –≤ —Ä–∞–∑–º–µ—Ä–µ 500 –º–æ–Ω–µ—Ç!")
        
        else:
            await bot.send_message(message.from_user.id, "–í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ –±–æ–Ω—É—Å –∑–∞ —ç—Ç–∏ 30 –º–∏–Ω—É—Ç.")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã'))
async def cmds(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["üìã –ü—Ä–æ—Ñ–∏–ª—å", "üéÅ –ë–æ–Ω—É—Å","üõí –ú–∞–≥–∞–∑–∏–Ω", "üèπ –ë–æ—Å—Å—ã", "üèÜ –¢–æ–ø", "üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"]])
    await bot.send_message(message.from_user.id, "üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã:\nüìã –ü—Ä–æ—Ñ–∏–ª—å\nüéÅ –ë–æ–Ω—É—Å\nüõí –ú–∞–≥–∞–∑–∏–Ω\nüí∞ –ü–µ—Ä–µ–¥–∞—Ç—å\nüí∞ –ü—Ä–æ–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥\nüèπ –ë–æ—Å—Å—ã\nüèÜ –¢–æ–ø\nüì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", reply_markup=markup)

@dp.message_handler(lambda msg: msg.text.startswith('üìã –ü—Ä–æ—Ñ–∏–ª—å'))
async def profile(message: types.Message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
            firstname = message.from_user.first_name
            mon = data_from_json[f"{user_id}"]["money"]
            lvl = data_from_json[f"{user_id}"]["level"]
            arm = data_from_json[f"{user_id}"]["armor"]
            pet = data_from_json[f"{user_id}"]["pet"] # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å, –Ω–æ –±—ã–ª–∞ –æ–±—ä—è–≤–ª–µ–Ω–∞ —á—Ç–æ –∑–∞–Ω—è–ª–æ –ø–∞–º—è—Ç—å –∏ —Å–∫–æ—Ä–æ—Å—Ç—å
            power = data_from_json[f"{user_id}"]["power"]
            health = data_from_json[f"{user_id}"]["hp"]
            dateofregistr = data_from_json[f"{user_id}"]["dateofreg"]
        await bot.send_message(message.from_user.id, f"üìã –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\
    ‚ö° –ù–∏–∫–Ω–µ–π–º: {firstname}\n\
    üí≥ ID: {user_id}\n\
    üí∞ –ú–æ–Ω–µ—Ç: {mon}\n\
    ‚ú® –†–µ–π—Ç–∏–Ω–≥: {round(lvl, 2)}\n\
    üõ°Ô∏è –ë—Ä–æ–Ω—è: {arm}\n\
    ‚öîÔ∏è –°–∏–ª–∞: {power}\n\
    üíä –ó–¥–æ—Ä–æ–≤—å–µ: {health}\n\
    üêæ –ü–∏—Ç–æ–º–µ—Ü: {pet}\n\
    üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {dateofregistr}\
    ")
    except KeyError:
        await bot.send_message(message.from_user.id, "–í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üõí –ú–∞–≥–∞–∑–∏–Ω'))
async def shop(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["ü©π –ê–ø—Ç–µ—á–∫–∞", "üîÆ –£–ª—É—á—à–µ–Ω–∏—è", "üõ°Ô∏è –ë—Ä–æ–Ω—è", "üêæ –ü–∏—Ç–æ–º—Ü—ã", "üîô –ù–∞–∑–∞–¥"]])
    await bot.send_message(message.from_user.id, "üõí –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:\n  ü©π –ê–ø—Ç–µ—á–∫–∞ - 1 hp = 10 –º–æ–Ω–µ—Ç", reply_markup=markup)

@dp.message_handler(lambda msg: msg.text.startswith('ü©π –ê–ø—Ç–µ—á–∫–∞'))
async def apteka(message: types.Message):
    try:
        await bot.send_message(message.from_user.id, "ü©π –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

    

@dp.message_handler(lambda msg: msg.text.startswith('üîÆ –£–ª—É—á—à–µ–Ω–∏—è'))
async def upgrades(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["‚öîÔ∏è –£–≤–µ–ª–∏—á–∏—Ç—å —Å–∏–ª—É", "üîô –ù–∞–∑–∞–¥"]])
    await bot.send_message(message.from_user.id, "üîÆ –í—ã–±–µ—Ä–∏—Ç–µ —É–ª—É—á—à–µ–Ω–∏–µ:", reply_markup=markup)

@dp.message_handler(lambda msg: msg.text.startswith('üõ°Ô∏è –ë—Ä–æ–Ω—è'))
async def armores(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["üß• –ñ–µ–ª–µ–∑–Ω–∞—è –±—Ä–æ–Ω—è", "üß• –ú–µ–¥–Ω–∞—è –±—Ä–æ–Ω—è", "üß• –ö–æ–ª—å—á—É–∂–Ω–∞—è –±—Ä–æ–Ω—è", "üß• –ß–µ—Ä–µ–ø–∞—à—å—è –±—Ä–æ–Ω—è", "üß• –ê–ª–º–∞–∑–Ω–∞—è –±—Ä–æ–Ω—è", "üß• –ù–µ–∑–µ—Ä–∏—Ç–æ–≤–∞—è –±—Ä–æ–Ω—è", "üîô –ù–∞–∑–∞–¥"]])
    await bot.send_message(message.from_user.id, "üõ°Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –±—Ä–æ–Ω–∏:\n   üß• –ñ–µ–ª–µ–∑–Ω–∞—è –±—Ä–æ–Ω—è - 500 –º–æ–Ω–µ—Ç\n   üß• –ú–µ–¥–Ω–∞—è –±—Ä–æ–Ω—è - 1.500 –º–æ–Ω–µ—Ç\n   üß• –ö–æ–ª—å—á—É–∂–Ω–∞—è –±—Ä–æ–Ω—è - 4.000 –º–æ–Ω–µ—Ç\n   üß• –ß–µ—Ä–µ–ø–∞—à—å—è –±—Ä–æ–Ω—è - 6.500 –º–æ–Ω–µ—Ç\n   üß• –ê–ª–º–∞–∑–Ω–∞—è –±—Ä–æ–Ω—è - 10.000 –º–æ–Ω–µ—Ç\n   üß• –ù–µ–∑–µ—Ä–∏—Ç–æ–≤–∞—è –±—Ä–æ–Ω—è - 20.000 –º–æ–Ω–µ—Ç", reply_markup=markup)

@dp.message_handler(lambda msg: msg.text.startswith('üß• –ù–µ–∑–µ—Ä–∏—Ç–æ–≤–∞—è –±—Ä–æ–Ω—è'))
async def ironarmor(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
        if data_from_json[f"{user_id}"]["money"] >= 20000:
            data_from_json[f"{user_id}"]["money"] -= 20000
            data_from_json[f"{user_id}"]["armor"] = "–ù–µ–∑–µ—Ä–∏—Ç–æ–≤–∞—è –±—Ä–æ–Ω—è"
            await bot.send_message(message.from_user.id, "üß• –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –ù–µ–∑–µ—Ä–∏—Ç–æ–≤—É—é –±—Ä–æ–Ω—é")
        else: 
            await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üß• –ê–ª–º–∞–∑–Ω–∞—è –±—Ä–æ–Ω—è'))
async def ironarmor(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
        if data_from_json[f"{user_id}"]["money"] >= 10000:
            data_from_json[f"{user_id}"]["money"] -= 10000
            data_from_json[f"{user_id}"]["armor"] = "–ê–ª–º–∞–∑–Ω–∞—è –±—Ä–æ–Ω—è"
            await bot.send_message(message.from_user.id, "üß• –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –ê–ª–º–∞–∑–Ω—É—é –±—Ä–æ–Ω—é")
        else: 
            await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üß• –ß–µ—Ä–µ–ø–∞—à—å—è –±—Ä–æ–Ω—è'))
async def ironarmor(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
        if data_from_json[f"{user_id}"]["money"] >= 6500:
            data_from_json[f"{user_id}"]["money"] -= 6500
            data_from_json[f"{user_id}"]["armor"] = "–ß–µ—Ä–µ–ø–∞—à—å—è –±—Ä–æ–Ω—è"
            await bot.send_message(message.from_user.id, "üß• –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –ß–µ—Ä–µ–ø–∞—à—å—é –±—Ä–æ–Ω—é")
        else: 
            await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üß• –ö–æ–ª—å—á—É–∂–Ω–∞—è –±—Ä–æ–Ω—è'))
async def ironarmor(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
        if data_from_json[f"{user_id}"]["money"] >= 4000:
            data_from_json[f"{user_id}"]["money"] -= 4000
            data_from_json[f"{user_id}"]["armor"] = "–ö–æ–ª—å—á—É–∂–Ω–∞—è –±—Ä–æ–Ω—è"
            await bot.send_message(message.from_user.id, "üß• –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –ö–æ–ª—å—á—É–∂–Ω—É—é –±—Ä–æ–Ω—é!")
        else: 
            await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üß• –ú–µ–¥–Ω–∞—è –±—Ä–æ–Ω—è'))
async def ironarmor(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
        if data_from_json[f"{user_id}"]["money"] >= 1500:
            data_from_json[f"{user_id}"]["money"] -= 1500
            data_from_json[f"{user_id}"]["armor"] = "–ú–µ–¥–Ω–∞—è –±—Ä–æ–Ω—è"
            await bot.send_message(message.from_user.id, "üß• –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –ú–µ–¥–Ω—É—é –±—Ä–æ–Ω—é!")
        else: 
            await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üß• –ñ–µ–ª–µ–∑–Ω–∞—è –±—Ä–æ–Ω—è'))
async def ironarmor(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
        if data_from_json[f"{user_id}"]["money"] >= 500:
            data_from_json[f"{user_id}"]["money"] -= 500
            data_from_json[f"{user_id}"]["armor"] = "–ñ–µ–ª–µ–∑–Ω–∞—è –±—Ä–æ–Ω—è"
            await bot.send_message(message.from_user.id, "üß• –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –ñ–µ–ª–µ–∑–Ω—É—é –±—Ä–æ–Ω—é!")
        else: 
            await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º'))
async def bosses(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["üå≤ –õ–µ—Å–Ω–∏–∫", "üíÄ –°–∫–µ–ª–µ—Ç–æ–Ω", "üêª –ë–∞—Ä—è", "üßôüèº –ú–∞–≥", "üßû‚Äç‚ôÇÔ∏è –î–∂–∏–Ω", "üßü‚Äç‚ôÇÔ∏è –ó–æ–º–±–∏", "üï∑Ô∏è –ü–∞—É–∫", "üé∞ –§–æ—Ä—Ç—É–Ω–∞", "ü¶á –ú–µ–≥–∞–±–æ—Å—Å", "üîô –ù–∞–∑–∞–¥", "üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å—ã:\n   üå≤ –õ–µ—Å–Ω–∏–∫\n   üíÄ –°–∫–µ–ª–µ—Ç–æ–Ω\n   üêª –ë–∞—Ä—è\n   üßôüèº –ú–∞–≥\n   üßû‚Äç‚ôÇÔ∏è –î–∂–∏–Ω\n   üßü‚Äç‚ôÇÔ∏è –ó–æ–º–±–∏\n   üï∑Ô∏è –ü–∞—É–∫\n   üé∞ –§–æ—Ä—Ç—É–Ω–∞\n   ü¶á –ú–µ–≥–∞–±–æ—Å—Å\n\nüîî –í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –±–æ—Å—Å–∞–º –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –ø—É–Ω–∫—Ç–µ - \n\"üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\"", reply_markup=markup)

@dp.message_handler(lambda msg: msg.text.startswith('üèπ –ë–æ—Å—Å—ã'))
async def bosses(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["üå≤ –õ–µ—Å–Ω–∏–∫", "üíÄ –°–∫–µ–ª–µ—Ç–æ–Ω", "üêª –ë–∞—Ä—è", "üßôüèº –ú–∞–≥", "üßû‚Äç‚ôÇÔ∏è –î–∂–∏–Ω", "üßü‚Äç‚ôÇÔ∏è –ó–æ–º–±–∏", "üï∑Ô∏è –ü–∞—É–∫", "üé∞ –§–æ—Ä—Ç—É–Ω–∞", "ü¶á –ú–µ–≥–∞–±–æ—Å—Å", "üîô –ù–∞–∑–∞–¥", "üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å—ã:\n   üå≤ –õ–µ—Å–Ω–∏–∫\n   üíÄ –°–∫–µ–ª–µ—Ç–æ–Ω\n   üêª –ë–∞—Ä—è\n   üßôüèº –ú–∞–≥\n   üßû‚Äç‚ôÇÔ∏è –î–∂–∏–Ω\n   üßü‚Äç‚ôÇÔ∏è –ó–æ–º–±–∏\n   üï∑Ô∏è –ü–∞—É–∫\n   üé∞ –§–æ—Ä—Ç—É–Ω–∞\n   ü¶á –ú–µ–≥–∞–±–æ—Å—Å\n\nüîî –í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –±–æ—Å—Å–∞–º –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –ø—É–Ω–∫—Ç–µ - \n\"üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\"", reply_markup=markup)

@dp.message_handler(lambda msg: msg.text.startswith('üé∞ –§–æ—Ä—Ç—É–Ω–∞'))
async def bosslesf(message: types.Message):
    try:
        user_id = message.from_user.id
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['üé∞ –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –§–æ—Ä—Ç—É–Ω–µ', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        hpf = databoss_from_json[f"{user_id}"]["hpfortuna"]
        if databoss_from_json[f"{user_id}"]["hpfortuna"] > 0:
            await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/fortuna.png'), caption=f"\
    –ë–æ—Å—Å: üé∞ –§–æ—Ä—Ç—É–Ω–∞\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {hpf} ‚ù§Ô∏è\n\
    –°–∏–ª–∞: ‚àû\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –†–µ–π—Ç–∏–Ω–≥\n\
    2. –ú–æ–Ω–µ—Ç—ã\n\
    \n\n\
    –≠—Ç–æ—Ç –±–æ—Å—Å —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É. –ü—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –µ–≥–æ —É–±–∏—Ç—å, –æ–Ω –∏–ª–∏ —É–±—å–µ—Ç –≤–∞—Å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç –≤–∞–º 1 –∑–¥–æ—Ä–æ–≤—å–µ, –µ—â–µ –≤—ã –º–æ–∂–µ—Ç–µ –µ–º—É —Å–Ω–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ 1 –ø–æ–∏–Ω—Ç –∑–¥–æ—Ä–æ–≤—å—è(—á—Ç–æ —è –≤–ª—è–µ—Ç—Å—è –µ–≥–æ —Ö–ø).\
    ", reply_markup=markup)
        else:
            await bot.send_message(message.from_user.id, "üé∞ –ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üé∞ –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –§–æ—Ä—Ç—É–Ω–µ'))
async def damagefortuna(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            if data_from_json[f"{user_id}"]["hp"] > 0 :
                if databoss_from_json[f"{user_id}"]["hpfortuna"] > 0:
                    randomminushp = [-1, 1]
                    randminhp = random.choice(randomminushp)
                    data_from_json[f"{user_id}"]["hp"] = randminhp
                    hp = data_from_json[f"{user_id}"]["hp"]
                    power = random.randint(1,100)
                    myhp = data_from_json[f"{user_id}"]["hp"]
                    await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–µ —Å–º–æ–≥–ª–∏ —É–±–∏—Ç—å –±–æ—Å—Å–∞. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                    if power == 34:
                        databoss_from_json[f"{user_id}"]["hpfortuna"] -= power
                        hpboss = databoss_from_json[f"{user_id}"]["hpfortuna"]
                        await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                        if databoss_from_json[f"{user_id}"]["hpfortuna"] <= 0:
                            randomboss = ["–†–µ–π—Ç–∏–Ω–≥", "–ú–æ–Ω–µ—Ç—ã"]
                            randomlist = random.choice(randomboss)
                            data_from_json[f"{user_id}"]["randlist"] = randomlist
                            rlist = data_from_json[f"{user_id}"]["randlist"]
                            await bot.send_message(message.from_user.id, f"‚ò†Ô∏è –í—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ - {rlist}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {hp}")
                            if data_from_json[f"{user_id}"]["randlist"] == "–†–µ–π—Ç–∏–Ω–≥":
                                    randomlevel = random.randint(10, 100)
                                    data_from_json[f"{user_id}"]["pluslevel"] = randomlevel
                                    data_from_json[f"{user_id}"]["level"] += data_from_json[f"{user_id}"]["pluslevel"]
                                    

                                    await bot.send_message(message.from_user.id, f"‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {round(randomlevel, 2)} –†–µ–π—Ç–∏–Ω–≥")
                            if data_from_json[f"{user_id}"]["randlist"] == "–ú–æ–Ω–µ—Ç—ã":
                                with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                    data_from_json = json.loads(f_o.read())

                                    randommonet = random.randint(10000, 100000)
                                    data_from_json[f"{user_id}"]["plusmoney"] = randommonet
                                    data_from_json[f"{user_id}"]["money"] += data_from_json[f"{user_id}"]["plusmoney"]
                                    

                            
                                await bot.send_message(message.from_user.id, f"üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {randommonet} –º–æ–Ω–µ—Ç")
                        else:
                            await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–Ω–µ—Å–ª–∏ –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                elif(databoss_from_json[f"{user_id}"]["hpfortuna"]) <= 0:
                    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è.")
                with open("C:/IT/RPGbot/database.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                    json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            elif data_from_json[f"{user_id}"]["hp"]<= 0:
                await bot.send_message(message.from_user.id, "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üï∑Ô∏è –ü–∞—É–∫'))
async def bosslesp(message: types.Message):
    try:
        user_id = message.from_user.id
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['üï∑Ô∏è –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ü–∞—É–∫—É', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        hpsp = databoss_from_json[f"{user_id}"]["hpspider"]
        if databoss_from_json[f"{user_id}"]["hpspider"] > 0:
            await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/spider.png'), caption=f"\
    –ë–æ—Å—Å: üï∑Ô∏è –ü–∞—É–∫\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {hpsp} ‚ù§Ô∏è\n\
    –°–∏–ª–∞: 80, –∫—Ä–∏—Ç 100\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –†–µ–π—Ç–∏–Ω–≥\n\
    2. –ú–æ–Ω–µ—Ç—ã\n\
    \n\n\
    ", reply_markup=markup)
        else:
            await bot.send_message(message.from_user.id, "üï∑Ô∏è –ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üï∑Ô∏è –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ü–∞—É–∫—É'))
async def damagespider(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            if data_from_json[f"{user_id}"]["hp"] > 0 :
                if databoss_from_json[f"{user_id}"]["hpspider"] > 0:
                    randomminushp = [80, 100, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 0, 0, 0]
                    randminhp = random.choice(randomminushp)
                    data_from_json[f"{user_id}"]["hp"] -= randminhp
                    hp = data_from_json[f"{user_id}"]["hp"]
                    databoss_from_json[f"{user_id}"]["hpspider"] -= data_from_json[f"{user_id}"]["power"]
                    hpboss = databoss_from_json[f"{user_id}"]["hpspider"]
                    myhp = data_from_json[f"{user_id}"]["hp"]
                    await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                    if databoss_from_json[f"{user_id}"]["hpspider"] <= 0:

                        
                            randomboss = ["–†–µ–π—Ç–∏–Ω–≥", "–ú–æ–Ω–µ—Ç—ã"]
                            randomlist = random.choice(randomboss)
                            data_from_json[f"{user_id}"]["randlist"] = randomlist
                            rlist = data_from_json[f"{user_id}"]["randlist"]
                            await bot.send_message(message.from_user.id, f"‚ò†Ô∏è –í—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ - {rlist}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {hp}")
                            if data_from_json[f"{user_id}"]["randlist"] == "–†–µ–π—Ç–∏–Ω–≥":
                                    randomlevel = random.randint(8, 9)
                                    data_from_json[f"{user_id}"]["pluslevel"] = randomlevel
                                    data_from_json[f"{user_id}"]["level"] += data_from_json[f"{user_id}"]["pluslevel"]
                                    

                                    await bot.send_message(message.from_user.id, f"‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {round(randomlevel, 2)} –†–µ–π—Ç–∏–Ω–≥")
                            if data_from_json[f"{user_id}"]["randlist"] == "–ú–æ–Ω–µ—Ç—ã":
                                with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                    data_from_json = json.loads(f_o.read())

                                    randommonet = random.randint(1300, 1600)
                                    data_from_json[f"{user_id}"]["plusmoney"] = randommonet
                                    data_from_json[f"{user_id}"]["money"] += data_from_json[f"{user_id}"]["plusmoney"]
                                    

                            
                                await bot.send_message(message.from_user.id, f"üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {randommonet} –º–æ–Ω–µ—Ç")
                elif(databoss_from_json[f"{user_id}"]["hpspider"]) <= 0:
                    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è.")
                with open("C:/IT/RPGbot/database.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                    json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            elif data_from_json[f"{user_id}"]["hp"]<= 0:
                await bot.send_message(message.from_user.id, "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üßü‚Äç‚ôÇÔ∏è –ó–æ–º–±–∏'))
async def bosslesz(message: types.Message):
    try:
        user_id = message.from_user.id
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['üßü‚Äç‚ôÇÔ∏è –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ó–æ–º–±–∏', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        hpz = databoss_from_json[f"{user_id}"]["hpzombie"]
        if databoss_from_json[f"{user_id}"]["hpzombie"] > 0:
            await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/zombie.png'), caption=f"\
    –ë–æ—Å—Å: üßü‚Äç‚ôÇÔ∏è –ó–æ–º–±–∏\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {hpz} ‚ù§Ô∏è\n\
    –°–∏–ª–∞: 40, –∫—Ä–∏—Ç 60\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –†–µ–π—Ç–∏–Ω–≥\n\
    2. –ú–æ–Ω–µ—Ç—ã\n\
    \n\n\
    ", reply_markup=markup)
        else:
            await bot.send_message(message.from_user.id, "üßü‚Äç‚ôÇÔ∏è –ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")            

@dp.message_handler(lambda msg: msg.text.startswith('üßü‚Äç‚ôÇÔ∏è –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ó–æ–º–±–∏'))
async def damagezombie(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            if data_from_json[f"{user_id}"]["hp"] > 0 :
                if databoss_from_json[f"{user_id}"]["hpzombie"] > 0:
                    randomminushp = [40, 60, 40, 0, 40, 40, 40, 40, 40, 40, 40, 0, 0, 0]
                    randminhp = random.choice(randomminushp)
                    data_from_json[f"{user_id}"]["hp"] -= randminhp
                    hp = data_from_json[f"{user_id}"]["hp"]
                    databoss_from_json[f"{user_id}"]["hpzombie"] -= data_from_json[f"{user_id}"]["power"]
                    hpboss = databoss_from_json[f"{user_id}"]["hpzombie"]
                    myhp = data_from_json[f"{user_id}"]["hp"]
                    await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                    if databoss_from_json[f"{user_id}"]["hpzombie"] <= 0:

                        
                            randomboss = ["–†–µ–π—Ç–∏–Ω–≥", "–ú–æ–Ω–µ—Ç—ã"]
                            randomlist = random.choice(randomboss)
                            data_from_json[f"{user_id}"]["randlist"] = randomlist
                            rlist = data_from_json[f"{user_id}"]["randlist"]
                            await bot.send_message(message.from_user.id, f"‚ò†Ô∏è –í—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ - {rlist}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {hp}")
                            if data_from_json[f"{user_id}"]["randlist"] == "–†–µ–π—Ç–∏–Ω–≥":
                                    randomlevel = random.randint(7, 8)
                                    data_from_json[f"{user_id}"]["pluslevel"] = randomlevel
                                    data_from_json[f"{user_id}"]["level"] += data_from_json[f"{user_id}"]["pluslevel"]
                                    

                                    await bot.send_message(message.from_user.id, f"‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {round(randomlevel, 2)} –†–µ–π—Ç–∏–Ω–≥")
                            if data_from_json[f"{user_id}"]["randlist"] == "–ú–æ–Ω–µ—Ç—ã":
                                with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                    data_from_json = json.loads(f_o.read())

                                    randommonet = random.randint(1000, 1500)
                                    data_from_json[f"{user_id}"]["plusmoney"] = randommonet
                                    data_from_json[f"{user_id}"]["money"] += data_from_json[f"{user_id}"]["plusmoney"]
                                    

                            
                                await bot.send_message(message.from_user.id, f"üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {randommonet} –º–æ–Ω–µ—Ç")
                elif(databoss_from_json[f"{user_id}"]["hpzombie"]) <= 0:
                    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è.")
                with open("C:/IT/RPGbot/database.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                    json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            elif data_from_json[f"{user_id}"]["hp"]<= 0:
                await bot.send_message(message.from_user.id, "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üßû‚Äç‚ôÇÔ∏è –î–∂–∏–Ω'))
async def bosslesj(message: types.Message):
    try:
        user_id = message.from_user.id
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['üßû‚Äç‚ôÇÔ∏è –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –î–∂–∏–Ω—É', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        hpj = databoss_from_json[f"{user_id}"]["hpjin"]
        if databoss_from_json[f"{user_id}"]["hpjin"] > 0:
            await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/jin.png'), caption=f"\
    –ë–æ—Å—Å: üßû‚Äç‚ôÇÔ∏è –î–∂–∏–Ω\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {hpj} ‚ù§Ô∏è\n\
    –°–∏–ª–∞: 25, –∫—Ä–∏—Ç 35\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –†–µ–π—Ç–∏–Ω–≥\n\
    2. –ú–æ–Ω–µ—Ç—ã\n\
    \n\n\
    ", reply_markup=markup)
        else:
            await bot.send_message(message.from_user.id, "üßû‚Äç‚ôÇÔ∏è –ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üßû‚Äç‚ôÇÔ∏è –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –î–∂–∏–Ω—É'))
async def damagejin(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            if data_from_json[f"{user_id}"]["hp"] > 0 :
                if databoss_from_json[f"{user_id}"]["hpjin"] > 0:
                    randomminushp = [25, 25, 35, 25, 25, 25, 25, 25, 25, 25, 25, 35, 0, 0, 0]
                    randminhp = random.choice(randomminushp)
                    data_from_json[f"{user_id}"]["hp"] -= randminhp
                    hp = data_from_json[f"{user_id}"]["hp"]
                    databoss_from_json[f"{user_id}"]["hpjin"] -= data_from_json[f"{user_id}"]["power"]
                    hpboss = databoss_from_json[f"{user_id}"]["hpjin"]
                    myhp = data_from_json[f"{user_id}"]["hp"]
                    await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                    if databoss_from_json[f"{user_id}"]["hpjin"] <= 0:

                        
                            randomboss = ["–†–µ–π—Ç–∏–Ω–≥", "–ú–æ–Ω–µ—Ç—ã"]
                            randomlist = random.choice(randomboss)
                            data_from_json[f"{user_id}"]["randlist"] = randomlist
                            rlist = data_from_json[f"{user_id}"]["randlist"]
                            await bot.send_message(message.from_user.id, f"‚ò†Ô∏è –í—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ - {rlist}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {hp}")
                            if data_from_json[f"{user_id}"]["randlist"] == "–†–µ–π—Ç–∏–Ω–≥":
                                    randomlevel = random.randint(5, 7)
                                    data_from_json[f"{user_id}"]["pluslevel"] = randomlevel
                                    data_from_json[f"{user_id}"]["level"] += data_from_json[f"{user_id}"]["pluslevel"]
                                    

                                    await bot.send_message(message.from_user.id, f"‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {round(randomlevel, 2)} –†–µ–π—Ç–∏–Ω–≥")
                            if data_from_json[f"{user_id}"]["randlist"] == "–ú–æ–Ω–µ—Ç—ã":
                                with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                    data_from_json = json.loads(f_o.read())

                                    randommonet = random.randint(700, 900)
                                    data_from_json[f"{user_id}"]["plusmoney"] = randommonet
                                    data_from_json[f"{user_id}"]["money"] += data_from_json[f"{user_id}"]["plusmoney"]
                                    

                            
                                await bot.send_message(message.from_user.id, f"üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {randommonet} –º–æ–Ω–µ—Ç")
                elif(databoss_from_json[f"{user_id}"]["hpjin"]) <= 0:
                    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è.")
                with open("C:/IT/RPGbot/database.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                    json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            elif data_from_json[f"{user_id}"]["hp"]<= 0:
                await bot.send_message(message.from_user.id, "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")


@dp.message_handler(lambda msg: msg.text.startswith('üå≤ –õ–µ—Å–Ω–∏–∫'))
async def bossles(message: types.Message):
    try:
        user_id = message.from_user.id
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['üå≤ –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –õ–µ—Å–Ω–∏–∫—É', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        hpl = databoss_from_json[f"{user_id}"]["hples"]
        if databoss_from_json[f"{user_id}"]["hples"] > 0:
            await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/lesnik.png'), caption=f"\
    –ë–æ—Å—Å: üå≤ –õ–µ—Å–Ω–∏–∫\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {hpl} ‚ù§Ô∏è\n\
    –°–∏–ª–∞: 1-5, –∫—Ä–∏—Ç 9\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –†–µ–π—Ç–∏–Ω–≥\n\
    2. –ú–æ–Ω–µ—Ç—ã\n\
    \n\n\
    ", reply_markup=markup)
        else:
            await bot.send_message(message.from_user.id, "üå≤ –ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üêª –ë–∞—Ä—è'))
async def bossbarya(message: types.Message):
    try:
        user_id = message.from_user.id
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['üêª –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ë–∞—Ä–µ', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        hpb = databoss_from_json[f"{user_id}"]["hpbarya"]
        if databoss_from_json[f"{user_id}"]["hpbarya"] > 0:
            await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/barya.png'), caption=f"\
    –ë–æ—Å—Å: üêª –ë–∞—Ä—è\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {hpb} ‚ù§Ô∏è\n\
    –°–∏–ª–∞: 10-13, –∫—Ä–∏—Ç 17\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –†–µ–π—Ç–∏–Ω–≥\n\
    2. –ú–æ–Ω–µ—Ç—ã\n\
    \n\n\
    ", reply_markup=markup)
        else:
            await bot.send_message(message.from_user.id, "üêª –ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üêª –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ë–∞—Ä–µ'))
async def damagebarya(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            if data_from_json[f"{user_id}"]["hp"] > 0 :
                if databoss_from_json[f"{user_id}"]["hpbarya"] > 0:
                    randomminushp = [10, 12, 13, 11, 17, 10, 12, 13, 13, 12, 13, 11, 10, 10, 0, 0, 0]
                    randminhp = random.choice(randomminushp)
                    data_from_json[f"{user_id}"]["hp"] -= randminhp
                    hp = data_from_json[f"{user_id}"]["hp"]
                    databoss_from_json[f"{user_id}"]["hpbarya"] -= data_from_json[f"{user_id}"]["power"]
                    hpboss = databoss_from_json[f"{user_id}"]["hpbarya"]
                    myhp = data_from_json[f"{user_id}"]["hp"]
                    await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                    if databoss_from_json[f"{user_id}"]["hpbarya"] <= 0:

                        
                            randomboss = ["–†–µ–π—Ç–∏–Ω–≥", "–ú–æ–Ω–µ—Ç—ã"]
                            randomlist = random.choice(randomboss)
                            data_from_json[f"{user_id}"]["randlist"] = randomlist
                            rlist = data_from_json[f"{user_id}"]["randlist"]
                            await bot.send_message(message.from_user.id, f"‚ò†Ô∏è –í—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ - {rlist}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {hp}")
                            if data_from_json[f"{user_id}"]["randlist"] == "–†–µ–π—Ç–∏–Ω–≥":
                                    randomlevel = random.randint(2, 3)
                                    data_from_json[f"{user_id}"]["pluslevel"] = randomlevel
                                    data_from_json[f"{user_id}"]["level"] += data_from_json[f"{user_id}"]["pluslevel"]
                                    

                                    await bot.send_message(message.from_user.id, f"‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {round(randomlevel, 2)} –†–µ–π—Ç–∏–Ω–≥")
                            if data_from_json[f"{user_id}"]["randlist"] == "–ú–æ–Ω–µ—Ç—ã":
                                with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                    data_from_json = json.loads(f_o.read())

                                    randommonet = random.randint(250, 350)
                                    data_from_json[f"{user_id}"]["plusmoney"] = randommonet
                                    data_from_json[f"{user_id}"]["money"] += data_from_json[f"{user_id}"]["plusmoney"]
                                    

                            
                                await bot.send_message(message.from_user.id, f"üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {randommonet} –º–æ–Ω–µ—Ç")
                elif(databoss_from_json[f"{user_id}"]["hpbarya"]) <= 0:
                    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è.")
                with open("C:/IT/RPGbot/database.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                    json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            elif data_from_json[f"{user_id}"]["hp"]<= 0:
                await bot.send_message(message.from_user.id, "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üå≤ –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –õ–µ—Å–Ω–∏–∫—É'))
async def damageforest(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            if data_from_json[f"{user_id}"]["hp"] > 0 :
                if databoss_from_json[f"{user_id}"]["hples"] > 0:
                    randomminushp = [1, 2, 3, 4, 5, 9, 1, 2, 3, 4, 5, 0, 0]
                    randminhp = random.choice(randomminushp)
                    data_from_json[f"{user_id}"]["hp"] -= randminhp
                    hp = data_from_json[f"{user_id}"]["hp"]
                    databoss_from_json[f"{user_id}"]["hples"] -= data_from_json[f"{user_id}"]["power"]
                    hpboss = databoss_from_json[f"{user_id}"]["hples"]
                    myhp = data_from_json[f"{user_id}"]["hp"]
                    await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                    if databoss_from_json[f"{user_id}"]["hples"] <= 0:

                        
                            randomboss = ["–†–µ–π—Ç–∏–Ω–≥", "–ú–æ–Ω–µ—Ç—ã"]
                            randomlist = random.choice(randomboss)
                            data_from_json[f"{user_id}"]["randlist"] = randomlist
                            rlist = data_from_json[f"{user_id}"]["randlist"]
                            rlist = data_from_json[f"{user_id}"]["randlist"]
                            await bot.send_message(message.from_user.id, f"‚ò†Ô∏è –í—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ - {rlist}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {hp}")
                            if data_from_json[f"{user_id}"]["randlist"] == "–†–µ–π—Ç–∏–Ω–≥":
                                    randomlevel = random.randint(1, 2)
                                    data_from_json[f"{user_id}"]["pluslevel"] = randomlevel
                                    data_from_json[f"{user_id}"]["level"] += data_from_json[f"{user_id}"]["pluslevel"]
                                    

                                    await bot.send_message(message.from_user.id, f"‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {round(randomlevel, 2)} –†–µ–π—Ç–∏–Ω–≥")
                            if data_from_json[f"{user_id}"]["randlist"] == "–ú–æ–Ω–µ—Ç—ã":
                                with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                    data_from_json = json.loads(f_o.read())

                                    randommonet = random.randint(30, 150)
                                    data_from_json[f"{user_id}"]["plusmoney"] = randommonet
                                    data_from_json[f"{user_id}"]["money"] += data_from_json[f"{user_id}"]["plusmoney"]
                                    

                            
                                await bot.send_message(message.from_user.id, f"üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {randommonet} –º–æ–Ω–µ—Ç")
                elif(databoss_from_json[f"{user_id}"]["hples"]) <= 0:
                    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è.")
                with open("C:/IT/RPGbot/database.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                    json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            elif data_from_json[f"{user_id}"]["hp"]<= 0:
                await bot.send_message(message.from_user.id, "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üßôüèº –ú–∞–≥'))
async def bosslesm(message: types.Message):
    try:
        user_id = message.from_user.id
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['üßôüèº –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ú–∞–≥—É', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        hpm = databoss_from_json[f"{user_id}"]["hpmag"]
        if databoss_from_json[f"{user_id}"]["hpmag"] > 0:
            await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/mag.png'), caption=f"\
    –ë–æ—Å—Å: üßôüèº –ú–∞–≥\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {hpm} ‚ù§Ô∏è\n\
    –°–∏–ª–∞: 15, –∫—Ä–∏—Ç 20\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –†–µ–π—Ç–∏–Ω–≥\n\
    2. –ú–æ–Ω–µ—Ç—ã\n\
    \n\n\
    ", reply_markup=markup)
        else:
            await bot.send_message(message.from_user.id, "üßôüèº –ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üßôüèº –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –ú–∞–≥—É'))
async def damagemag(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            if data_from_json[f"{user_id}"]["hp"] > 0 :
                if databoss_from_json[f"{user_id}"]["hpmag"] > 0:
                    randomminushp = [15, 15, 15, 15, 15, 20, 15, 15, 15]
                    randminhp = random.choice(randomminushp)
                    data_from_json[f"{user_id}"]["hp"] -= randminhp
                    hp = data_from_json[f"{user_id}"]["hp"]
                    databoss_from_json[f"{user_id}"]["hpmag"] -= data_from_json[f"{user_id}"]["power"]
                    hpboss = databoss_from_json[f"{user_id}"]["hpmag"]
                    myhp = data_from_json[f"{user_id}"]["hp"]
                    await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                    if databoss_from_json[f"{user_id}"]["hpmag"] <= 0:

                        
                            randomboss = ["–†–µ–π—Ç–∏–Ω–≥", "–ú–æ–Ω–µ—Ç—ã"]
                            randomlist = random.choice(randomboss)
                            data_from_json[f"{user_id}"]["randlist"] = randomlist
                            rlist = data_from_json[f"{user_id}"]["randlist"]
                            await bot.send_message(message.from_user.id, f"‚ò†Ô∏è –í—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ - {rlist}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {hp}")
                            if data_from_json[f"{user_id}"]["randlist"] == "–†–µ–π—Ç–∏–Ω–≥":
                                    randomlevel = random.randint(3, 4)
                                    data_from_json[f"{user_id}"]["pluslevel"] = randomlevel
                                    data_from_json[f"{user_id}"]["level"] += data_from_json[f"{user_id}"]["pluslevel"]
                                    

                                    await bot.send_message(message.from_user.id, f"‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {round(randomlevel, 2)} –†–µ–π—Ç–∏–Ω–≥")
                            if data_from_json[f"{user_id}"]["randlist"] == "–ú–æ–Ω–µ—Ç—ã":
                                with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                    data_from_json = json.loads(f_o.read())

                                    randommonet = random.randint(400, 500)
                                    data_from_json[f"{user_id}"]["plusmoney"] = randommonet
                                    data_from_json[f"{user_id}"]["money"] += data_from_json[f"{user_id}"]["plusmoney"]
                                    

                            
                                await bot.send_message(message.from_user.id, f"üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {randommonet} –º–æ–Ω–µ—Ç")
                elif(databoss_from_json[f"{user_id}"]["hpmag"]) <= 0:
                    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è.")
                with open("C:/IT/RPGbot/database.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                    json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            elif data_from_json[f"{user_id}"]["hp"]<= 0:
                await bot.send_message(message.from_user.id, "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")


@dp.message_handler(lambda msg: msg.text.startswith('üíÄ –°–∫–µ–ª–µ—Ç–æ–Ω'))
async def bossless(message: types.Message):
    try:
        user_id = message.from_user.id
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(*[KeyboardButton(text) for text in ['üíÄ –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –°–∫–µ–ª–µ—Ç–æ–Ω—É', 'üîô –ù–∞–∑–∞–¥ –∫ –±–æ—Å—Å–∞–º', 'üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤']])
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        hpske = databoss_from_json[f"{user_id}"]["hpskelet"]
        if databoss_from_json[f"{user_id}"]["hpskelet"] > 0:
            await bot.send_photo(message.chat.id, photo=InputFile('C:/IT/RPGbot/photobosses/skeleton.png'), caption=f"\
    –ë–æ—Å—Å: üíÄ –°–∫–µ–ª–µ—Ç–æ–Ω\n\
    –ó–¥–æ—Ä–æ–≤—å–µ: {hpske} ‚ù§Ô∏è\n\
    –°–∏–ª–∞: 7-9, –∫—Ä–∏—Ç 15\n\
    \n\
    –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
    1. –†–µ–π—Ç–∏–Ω–≥\n\
    2. –ú–æ–Ω–µ—Ç—ã\n\
    \n\n\
    ", reply_markup=markup)
        else:
            await bot.send_message(message.from_user.id, "üíÄ –ë–æ—Å—Å –ø–æ–≤–µ—Ä–∂–µ–Ω!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üíÄ –ù–∞–Ω–µ—Å—Ç–∏ —É—Ä–æ–Ω –°–∫–µ–ª–µ—Ç–æ–Ω—É'))
async def damageskeleton(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
            databoss_from_json = json.loads(f_o.read())
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            if data_from_json[f"{user_id}"]["hp"] > 0 :
                if databoss_from_json[f"{user_id}"]["hpskelet"] > 0:
                    randomminushp = [7, 9, 15, 7, 9 ,7 ,9 ,7, 9, 0, 0]
                    randminhp = random.choice(randomminushp)
                    data_from_json[f"{user_id}"]["hp"] -= randminhp
                    hp = data_from_json[f"{user_id}"]["hp"]
                    databoss_from_json[f"{user_id}"]["hpskelet"] -= data_from_json[f"{user_id}"]["power"]
                    hpboss = databoss_from_json[f"{user_id}"]["hpskelet"]
                    myhp = data_from_json[f"{user_id}"]["hp"]
                    await bot.send_message(message.from_user.id, f"üí• –í—ã –Ω–∞–Ω–µ—Å–ª–∏ —É—Ä–æ–Ω –±–æ—Å—Å—É. –ó–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–∞: {hpboss}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {myhp}")
                    if databoss_from_json[f"{user_id}"]["hpskelet"] <= 0:
                        with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                data_from_json = json.loads(f_o.read())

                        
                        randomboss = ["–†–µ–π—Ç–∏–Ω–≥", "–ú–æ–Ω–µ—Ç—ã"]
                        randomlist = random.choice(randomboss)
                        data_from_json[f"{user_id}"]["randlist"] = randomlist
                        await bot.send_message(message.from_user.id, f"‚ò†Ô∏è –í—ã —É–±–∏–ª–∏ –±–æ—Å—Å–∞! –í—ã –ø–æ–ª—É—á–∏–ª–∏ - {randomlist}. –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: {hp}")
                        if data_from_json[f"{user_id}"]["randlist"] == "–†–µ–π—Ç–∏–Ω–≥":
                                randomlevel = random.randint(1, 2)
                                data_from_json[f"{user_id}"]["pluslevel"] = randomlevel
                                data_from_json[f"{user_id}"]["level"] += data_from_json[f"{user_id}"]["pluslevel"]
                                

                                await bot.send_message(message.from_user.id, f"‚ú® –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {round(randomlevel, 2)} –†–µ–π—Ç–∏–Ω–≥")
                        if data_from_json[f"{user_id}"]["randlist"] == "–ú–æ–Ω–µ—Ç—ã":
                            with open("C:/IT/RPGbot/database.json", "r") as f_o:
                                data_from_json = json.loads(f_o.read())

                                randommonet = random.randint(150, 250)
                                data_from_json[f"{user_id}"]["plusmoney"] = randommonet
                                data_from_json[f"{user_id}"]["money"] += data_from_json[f"{user_id}"]["plusmoney"]
                                

                            
                                await bot.send_message(message.from_user.id, f"üí∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ + {randommonet} –º–æ–Ω–µ—Ç")
                elif(databoss_from_json[f"{user_id}"]["hpskelet"]) <= 0:
                    await bot.send_message(message.from_user.id, "üèπ –ë–æ—Å—Å –µ—â–µ –Ω–µ –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª—Å—è.")
                with open("C:/IT/RPGbot/database.json", "w") as f_o:
                    json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
                with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                    json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            elif data_from_json[f"{user_id}"]["hp"]<= 0:
                await bot.send_message(message.from_user.id, "‚ö†Ô∏è –£ –≤–∞—Å –Ω–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ.")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üèπ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –±–æ—Å—Å–æ–≤'))
async def regenboss(message: types.Message):
    chars = list('+-/*!&$#?=w@<>abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890')
    random.shuffle(chars)
    global captcha
    captcha = ''.join([random.choice(chars) for x in range(6)])
    await bot.send_message(message.from_user.id, f"–í–≤–µ–¥–∏—Ç–µ –∫–∞–ø—á—É: {captcha}\n–ß—Ç–æ –±—ã –≤–≤–µ—Å—Ç–∏ –∫–∞–ø—á—É –Ω–∞–ø–∏—à–∏—Ç–µ \"–ö–∞–ø—á–∞ \"–∫–∞–ø—á–∞ –∫–æ—Ç–æ—Ä–∞—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∞—Å—å\"\"")

@dp.message_handler(lambda msg: msg.text.startswith('–ö–∞–ø—á–∞'))
async def captc(message: types.Message):
    try:
        user_id = message.from_user.id
        if message.text[6:] == captcha:
            with open("C:/IT/RPGbot/databaseboss.json", "r") as f_o:
                databoss_from_json = json.loads(f_o.read())
            with open("C:/IT/RPGbot/megaboss.json", "r") as f_o:
                megaboss = json.loads(f_o.read())
                if megaboss["megabosshp"] <= 0:
                    megaboss["megabosshp"] = 100000
                    databoss_from_json[f"{user_id}"]["hples"] = 5
                    databoss_from_json[f"{user_id}"]["hpskelet"] = 10
                    databoss_from_json[f"{user_id}"]["hpbarya"] = 20
                    databoss_from_json[f"{user_id}"]["hpmag"] = 50
                    databoss_from_json[f"{user_id}"]["hpjin"] = 80
                    databoss_from_json[f"{user_id}"]["hpzombie"] = 140
                    databoss_from_json[f"{user_id}"]["hpspider"] = 200
                    databoss_from_json[f"{user_id}"]["hpfortuna"] = 1
                else:
                    databoss_from_json[f"{user_id}"]["hples"] = 5
                    databoss_from_json[f"{user_id}"]["hpskelet"] = 10
                    databoss_from_json[f"{user_id}"]["hpbarya"] = 20
                    databoss_from_json[f"{user_id}"]["hpmag"] = 50
                    databoss_from_json[f"{user_id}"]["hpjin"] = 80
                    databoss_from_json[f"{user_id}"]["hpzombie"] = 140
                    databoss_from_json[f"{user_id}"]["hpspider"] = 200
                    databoss_from_json[f"{user_id}"]["hpfortuna"] = 1
            
            with open("C:/IT/RPGbot/databaseboss.json", "w") as f_o:
                json.dump(databoss_from_json, f_o, indent=4, ensure_ascii=False)
            with open("C:/IT/RPGbot/megaboss.json", "w") as f_o:
                json.dump(megaboss, f_o, indent=4, ensure_ascii=False)
            await bot.send_message(message.from_user.id, "üèπ –í—Å–µ –±–æ—Å—Å—ã –æ—Ç—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        elif message.text[6:] != captcha:
            await bot.send_message(message.from_user.id, "‚ùå –í—ã –Ω–µ –≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–∞–ø—á—É!")
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üîô –ù–∞–∑–∞–¥'))
async def back(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["üìã –ü—Ä–æ—Ñ–∏–ª—å", "üéÅ –ë–æ–Ω—É—Å","üõí –ú–∞–≥–∞–∑–∏–Ω","üèπ –ë–æ—Å—Å—ã", "üèÜ –¢–æ–ø", "üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"]])
    await bot.send_message(message.from_user.id, "üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã:\nüìã –ü—Ä–æ—Ñ–∏–ª—å\nüéÅ –ë–æ–Ω—É—Å\nüõí –ú–∞–≥–∞–∑–∏–Ω\nüí∞ –ü–µ—Ä–µ–¥–∞—Ç—å\nüí∞ –ü—Ä–æ–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥\nüèπ –ë–æ—Å—Å—ã\nüèÜ –¢–æ–ø\nüì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", reply_markup=markup)    

@dp.message_handler(lambda msg: msg.text.startswith('üêæ –ü–∏—Ç–æ–º—Ü—ã'))
async def buypets(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["üê∫ –í–æ–ª–∫", "ü¶ù –ï–Ω–æ—Ç", "ü§ñ –î—Ä–æ–Ω", "üîô –ù–∞–∑–∞–¥"]])
    await bot.send_message(message.from_user.id, "üêæ –í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ç–æ–º—Ü–∞:\n    üê∫ –í–æ–ª–∫ - 1.000.000:\n        –î–æ–±–∞–≤–ª—è–µ—Ç +30 –∫ —Å–∏–ª–µ\n    ü¶ù –ï–Ω–æ—Ç - 10.000.000:\n        –î–æ–±–∞–≤–ª—è–µ—Ç +50 –∫ —Å–∏–ª–µ\n    ü§ñ –î—Ä–æ–Ω - 50.000.000:\n        –î–æ–±–∞–≤–ª—è–µ—Ç –∫ +70 –∫ —Å–∏–ª–µ", reply_markup=markup)

@dp.message_handler(lambda msg: msg.text.startswith('üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ'))
async def infobot(message: types.Message):
    await bot.send_message(message.from_user.id, "üì¢ –ü—Ä–∏–≤–µ—Å—Ç–≤—É—é, –¥–∞–Ω–Ω—ã–π –±–æ—Ç, —ç—Ç–æ –∫–∞–∫ –º–∏–Ω–∏ RPG –∏–≥—Ä–∞, –≥–¥–µ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —É–±–∏–≤–∞—Ç—å –±–æ—Å—Å–æ–≤.\n–£ –∫–∞–∂–¥–æ–≥–æ –±–æ—Å—Å–∞ –µ—Å—Ç—å —Ö–ø, –Ω–∞–ø—Ä–∏–º–µ—Ä –≤–æ–∑—å–º–µ–º —Å–∞–º–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –±–æ—Å—Å–∞:\n\n\
–ë–æ—Å—Å: üå≤ –õ–µ—Å–Ω–∏–∫\n\
–ó–¥–æ—Ä–æ–≤—å–µ: 5 ‚ù§Ô∏è\n\
–°–∏–ª–∞: 1-5, –∫—Ä–∏—Ç 9\n\
\n\
–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ø–æ–±–µ–¥—É:\n\
1. –†–µ–π—Ç–∏–Ω–≥\n\
2. –ú–æ–Ω–µ—Ç—ã\n\
")


@dp.message_handler(lambda msg: msg.text.startswith('‚öîÔ∏è –£–≤–µ–ª–∏—á–∏—Ç—å —Å–∏–ª—É'))
async def upgradepower(message: types.Message):
    try:
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
        if data_from_json[f"{user_id}"]["money"] > 500:
            await bot.send_message(message.from_user.id, "‚öîÔ∏è –í—ã —É–≤–µ–ª–∏—á–∏–ª–∏ –≤–∞—à—É —Å–∏–ª—É –Ω–∞ 1")

            data_from_json[f"{user_id}"]["power"] += 1
            data_from_json[f"{user_id}"]["money"] -= 500
        else:
            await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç 500 –º–æ–Ω–µ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('üèÜ –¢–æ–ø'))
async def top(message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
        test_list = list(data_from_json.items())
        test_list.sort(reverse=True, key=lambda x: x[1]['money'])
        string = "üèÜ –¢–æ–ø –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –º–æ–Ω–µ—Ç:\n"
        for num, item in enumerate(test_list[:5], 1):
            string += f'{num}. {item[1]["username"]}[<code>{item[1]["id"]}</code>] - {item[1]["money"]} –º–æ–Ω–µ—Ç\n'
        await bot.send_message(message.from_user.id, text=string, parse_mode="HTML")
        await bot.send_message(message.from_user.id, '–ß—Ç–æ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø–∏—à–∏—Ç–µ "–ß–µ–∫ [ID]" –ë–ï–ó —Å–∫–æ–±–æ–∫ –∏ –∫–∞–≤—ã—á–µ–∫!')
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('‚úîÔ∏è –î–∞'))
async def aptekada(message: types.Message):
    try:
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        back = KeyboardButton("üîô –ù–∞–∑–∞–¥")
        markup.add(back)
        user_id = message.from_user.id
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())

            apt = data_from_json[f"{user_id}"]["apteka"]

            if data_from_json[f"{user_id}"]["money"] >= apt*10:
                data_from_json[f"{user_id}"]["hp"] += data_from_json[f"{user_id}"]["apteka"]
                data_from_json[f"{user_id}"]["money"] -= 10*data_from_json[f"{user_id}"]["apteka"]
                hp = data_from_json[f"{user_id}"]["apteka"]
                await bot.send_message(message.from_user.id, f"ü©π –í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–æ –Ω–∞ {hp}!", reply_markup=markup)
            else:
                await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç—É —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!", reply_markup=markup)
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('‚ùå –ù–µ—Ç'))
async def aptekano(message: types.Message):
    ReplyKeyboardRemove()
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*[KeyboardButton(text) for text in ["üìã –ü—Ä–æ—Ñ–∏–ª—å", "üéÅ –ë–æ–Ω—É—Å","üõí –ú–∞–≥–∞–∑–∏–Ω","üèπ –ë–æ—Å—Å—ã", "üèÜ –¢–æ–ø", "üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"]])
    await bot.send_message(message.from_user.id, "üõ†Ô∏è –ö–æ–º–∞–Ω–¥—ã:\nüìã –ü—Ä–æ—Ñ–∏–ª—å\nüéÅ –ë–æ–Ω—É—Å\nüõí –ú–∞–≥–∞–∑–∏–Ω\nüí∞ –ü–µ—Ä–µ–¥–∞—Ç—å\nüí∞ –ü—Ä–æ–¥–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥\nüèπ –ë–æ—Å—Å—ã\nüèÜ –¢–æ–ø\nüì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ", reply_markup=markup)

@dp.message_handler(lambda msg: msg.text.startswith('üê∫ –í–æ–ª–∫'))
async def wolf(message: types.Message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
            if data_from_json[f"{user_id}"]["wolf"] == 0:
                if data_from_json[f"{user_id}"]["money"] > 1000000:

                    data_from_json[f"{user_id}"]["wolf"] = 1
                    data_from_json[f"{user_id}"]["money"] -= 1000000
                    data_from_json[f"{user_id}"]["pet"] = "üê∫ –í–æ–ª–∫"
                    data_from_json[f"{user_id}"]["power"] += 30
                    await bot.send_message(message.from_user.id, "üê∫ –í—ã –∫—É–ø–∏–ª–∏ –≤–æ–ª–∫–∞!")
                else:
                    await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!")
            else: 
                await bot.send_message(message.from_user.id, "üê∫ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –≤–æ–ª–∫!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")

@dp.message_handler(lambda msg: msg.text.startswith('ü§ñ –î—Ä–æ–Ω'))
async def drone(message: types.Message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
            if data_from_json[f"{user_id}"]["enot"] == 0:
                if data_from_json[f"{user_id}"]["money"] > 50000000:

                    data_from_json[f"{user_id}"]["drone"] = 1
                    data_from_json[f"{user_id}"]["money"] -= 50000000
                    data_from_json[f"{user_id}"]["pet"] = "ü§ñ –î—Ä–æ–Ω"
                    data_from_json[f"{user_id}"]["power"] += 70
                    await bot.send_message(message.from_user.id, "ü§ñ –í—ã –∫—É–ø–∏–ª–∏ –¥—Ä–æ–Ω–∞!")
                else:
                    await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!")
            else: 
                await bot.send_message(message.from_user.id, "ü§ñ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥—Ä–æ–Ω!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")  

@dp.message_handler(lambda msg: msg.text.startswith('ü¶ù –ï–Ω–æ—Ç'))
async def enot(message: types.Message):
    try:
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())
            user_id = message.from_user.id
            if data_from_json[f"{user_id}"]["enot"] == 0:
                if data_from_json[f"{user_id}"]["money"] > 10000000:

                    data_from_json[f"{user_id}"]["enot"] = 1
                    data_from_json[f"{user_id}"]["money"] -= 10000000
                    data_from_json[f"{user_id}"]["pet"] = "ü¶ù –ï–Ω–æ—Ç"
                    data_from_json[f"{user_id}"]["power"] += 50
                    await bot.send_message(message.from_user.id, "ü¶ù –í—ã –∫—É–ø–∏–ª–∏ –µ–Ω–æ—Ç–∞!")
                else:
                    await bot.send_message(message.from_user.id, "‚ùå –£ –≤–∞—Å –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥!")
            else: 
                await bot.send_message(message.from_user.id, "ü¶ù –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –µ–Ω–æ—Ç!")
        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
    except KeyError:
        await bot.send_message(message.from_user.id, "‚ùå –í–∞—Å –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ù–∞–ø–∏—à–∏—Ç–µ - /start")  

@dp.message_handler()
async def echo(message: types.Message):
    text = message.text
    user_id = message.from_user.id
    if text.isdigit():
        with open("C:/IT/RPGbot/database.json", "r") as f_o:
            data_from_json = json.loads(f_o.read())

            data_from_json[f"{user_id}"]["apteka"] = int(text)

        with open("C:/IT/RPGbot/database.json", "w") as f_o:
            json.dump(data_from_json, f_o, indent=4, ensure_ascii=False)
        ReplyKeyboardRemove()
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        yes = KeyboardButton("‚úîÔ∏è –î–∞")
        no = KeyboardButton("‚ùå –ù–µ—Ç")
        markup.add(yes, no)
        await bot.send_message(message.from_user.id, f"ü©π –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –Ω–∞ {text}?", reply_markup=markup)
    else: 
        await bot.send_message(message.from_user.id, "‚ö†Ô∏è –Ø –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–ª –≤–∞—à–∏—Ö —Å–ª–æ–≤!")

async def main():
    await dp.start_polling(bot)

keep_alive()
if __name__ == "__main__":
    asyncio.run(main())# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ª–∏ —ç—Ç–æ—Ç —Ñ–∞–π–ª
